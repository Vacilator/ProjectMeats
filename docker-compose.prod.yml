services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    command: >
      gunicorn 
      --bind 0.0.0.0:8000 
      --workers 3
      --worker-class gthread
      --threads 2
      --worker-connections 1000
      --max-requests 1000
      --max-requests-jitter 100
      --access-logfile /var/log/projectmeats/access.log
      --error-logfile /var/log/projectmeats/error.log
      --log-level info
      --timeout 120
      --graceful-timeout 30
      --user projectmeats
      projectmeats.wsgi:application
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file: 
      - .env.prod
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECURE_SSL_REDIRECT=True
      - SESSION_COOKIE_SECURE=True
      - CSRF_COOKIE_SECURE=True
      - SECURE_HSTS_SECONDS=31536000
      - SECURE_HSTS_INCLUDE_SUBDOMAINS=True
      - SECURE_HSTS_PRELOAD=True
    restart: unless-stopped
    volumes:
      - static_files:/app/backend/staticfiles
      - media_files:/app/backend/media
      - log_files:/var/log/projectmeats
    user: "projectmeats"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
      - static_files:/var/www/static:ro
      - media_files:/var/www/media:ro

volumes:
  postgres_data:
  static_files:
  media_files:
  log_files: