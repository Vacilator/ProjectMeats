# Generated by Django 4.2.7 on 2025-07-28 20:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BugReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Equivalent to PowerApps CreatedOn field",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Equivalent to PowerApps ModifiedOn field",
                    ),
                ),
                (
                    "reporter_email",
                    models.EmailField(
                        help_text="Email address of the bug reporter", max_length=254
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Brief summary of the bug", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the bug"),
                ),
                (
                    "steps_to_reproduce",
                    models.TextField(
                        blank=True, help_text="Steps to reproduce the bug"
                    ),
                ),
                (
                    "expected_behavior",
                    models.TextField(blank=True, help_text="What should have happened"),
                ),
                (
                    "actual_behavior",
                    models.TextField(blank=True, help_text="What actually happened"),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        help_text="Priority level of the bug",
                        max_length=20,
                    ),
                ),
                (
                    "current_url",
                    models.URLField(blank=True, help_text="URL where the bug occurred"),
                ),
                (
                    "page_title",
                    models.CharField(
                        blank=True,
                        help_text="Title of the page where bug occurred",
                        max_length=200,
                    ),
                ),
                (
                    "browser_info",
                    models.JSONField(
                        default=dict, help_text="Browser and device information"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, help_text="User agent string"),
                ),
                (
                    "application_state",
                    models.JSONField(
                        default=dict, help_text="Application state when bug occurred"
                    ),
                ),
                (
                    "screenshot",
                    models.ImageField(
                        blank=True,
                        help_text="Screenshot of the bug",
                        null=True,
                        upload_to="bug_reports/screenshots/",
                    ),
                ),
                (
                    "additional_files",
                    models.FileField(
                        blank=True,
                        help_text="Additional files related to the bug",
                        null=True,
                        upload_to="bug_reports/files/",
                    ),
                ),
                (
                    "github_issue_number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="GitHub issue number if created",
                        null=True,
                    ),
                ),
                (
                    "github_issue_url",
                    models.URLField(
                        blank=True, help_text="URL of the created GitHub issue"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("submitted", "Submitted to GitHub"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("failed", "Failed to Submit"),
                        ],
                        default="pending",
                        help_text="Status of the bug report",
                        max_length=20,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if GitHub issue creation failed",
                    ),
                ),
                (
                    "assigned_to_copilot",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the issue was assigned to copilot",
                    ),
                ),
                (
                    "labels",
                    models.JSONField(
                        default=list, help_text="GitHub labels applied to the issue"
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        help_text="User who reported the bug",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bug_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bug Report",
                "verbose_name_plural": "Bug Reports",
                "db_table": "bug_reports",
                "ordering": ["-created_on"],
            },
        ),
    ]
