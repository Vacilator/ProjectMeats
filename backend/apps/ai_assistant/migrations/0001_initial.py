# Generated by Django 4.2.7 on 2025-07-28 20:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Configuration name/identifier",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("azure_openai", "Azure OpenAI"),
                            ("anthropic", "Anthropic Claude"),
                            ("local", "Local Model"),
                        ],
                        help_text="AI provider to use",
                        max_length=50,
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        help_text="Specific model name (e.g., gpt-4, claude-3, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        blank=True, help_text="Custom API endpoint if needed", null=True
                    ),
                ),
                (
                    "api_key_name",
                    models.CharField(
                        blank=True,
                        help_text="Environment variable name for API key",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Additional configuration parameters (temperature, max_tokens, etc.)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this configuration is active"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the default configuration",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "AI Configuration",
                "verbose_name_plural": "AI Configurations",
                "db_table": "ai_assistant_configurations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Equivalent to PowerApps CreatedOn field",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Equivalent to PowerApps ModifiedOn field",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        help_text="Equivalent to PowerApps statecode/statuscode fields",
                        max_length=20,
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the chat session",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title for the chat session, can be auto-generated from first message",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "session_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        help_text="Current status of the chat session",
                        max_length=20,
                    ),
                ),
                (
                    "context_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON field for storing session context, preferences, and metadata",
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp of last activity in this session",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps CreatedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps ModifiedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps OwnerId field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_owned",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Session",
                "verbose_name_plural": "Chat Sessions",
                "db_table": "ai_assistant_chat_sessions",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="UploadedDocument",
            fields=[
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Equivalent to PowerApps CreatedOn field",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Equivalent to PowerApps ModifiedOn field",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        help_text="Equivalent to PowerApps statecode/statuscode fields",
                        max_length=20,
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the document",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Uploaded document file",
                        upload_to="ai_assistant/documents/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "txt",
                                    "doc",
                                    "docx",
                                    "xls",
                                    "xlsx",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        help_text="Original filename of the uploaded document",
                        max_length=255,
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "file_type",
                    models.CharField(
                        help_text="MIME type of the uploaded file", max_length=100
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("purchase_order", "Purchase Order"),
                            ("invoice", "Invoice"),
                            ("supplier_document", "Supplier Document"),
                            ("customer_document", "Customer Document"),
                            ("contract", "Contract"),
                            ("receipt", "Receipt"),
                            ("unknown", "Unknown/Unclassified"),
                        ],
                        default="unknown",
                        help_text="Classified document type",
                        max_length=50,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0,
                        help_text="AI confidence score for document classification (0.0 to 1.0)",
                    ),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Processing"),
                            ("processing", "Processing"),
                            ("completed", "Processing Completed"),
                            ("failed", "Processing Failed"),
                            ("manual_review", "Requires Manual Review"),
                        ],
                        default="pending",
                        help_text="Current processing status",
                        max_length=20,
                    ),
                ),
                (
                    "extracted_text",
                    models.TextField(
                        blank=True,
                        help_text="Raw text extracted from the document",
                        null=True,
                    ),
                ),
                (
                    "extracted_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Structured data extracted from the document",
                    ),
                ),
                (
                    "processing_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Metadata about the processing (AI model used, processing time, etc.)",
                    ),
                ),
                (
                    "processing_error",
                    models.TextField(
                        blank=True,
                        help_text="Error details if processing failed",
                        null=True,
                    ),
                ),
                (
                    "created_entities",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of entity IDs and types created from this document",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps CreatedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps ModifiedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps OwnerId field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_owned",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Uploaded Document",
                "verbose_name_plural": "Uploaded Documents",
                "db_table": "ai_assistant_uploaded_documents",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="ProcessingTask",
            fields=[
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Equivalent to PowerApps CreatedOn field",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Equivalent to PowerApps ModifiedOn field",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the task",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        help_text="Type of processing task", max_length=50
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Processing"),
                            ("processing", "Processing"),
                            ("completed", "Processing Completed"),
                            ("failed", "Processing Failed"),
                            ("manual_review", "Requires Manual Review"),
                        ],
                        default="pending",
                        help_text="Current task status",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="Task progress percentage (0-100)"
                    ),
                ),
                (
                    "input_data",
                    models.JSONField(default=dict, help_text="Input data for the task"),
                ),
                (
                    "output_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Output data from the task"
                    ),
                ),
                (
                    "error_details",
                    models.TextField(
                        blank=True, help_text="Error details if task failed", null=True
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the task started processing",
                        null=True,
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the task completed", null=True
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps CreatedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated document if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_tasks",
                        to="ai_assistant.uploadeddocument",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps ModifiedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps OwnerId field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_owned",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="Chat session this task belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_tasks",
                        to="ai_assistant.chatsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Processing Task",
                "verbose_name_plural": "Processing Tasks",
                "db_table": "ai_assistant_processing_tasks",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Equivalent to PowerApps CreatedOn field",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Equivalent to PowerApps ModifiedOn field",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the message",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("user", "User Message"),
                            ("assistant", "AI Assistant Response"),
                            ("system", "System Message"),
                            ("document", "Document Upload"),
                        ],
                        help_text="Type of message (user, assistant, system, document)",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField(help_text="Message content/text")),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata about the message (AI model used, tokens, etc.)",
                    ),
                ),
                (
                    "is_processed",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the message has been fully processed",
                    ),
                ),
                (
                    "processing_error",
                    models.TextField(
                        blank=True,
                        help_text="Error message if processing failed",
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps CreatedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps ModifiedBy field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Equivalent to PowerApps OwnerId field",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_owned",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        help_text="Chat session this message belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="ai_assistant.chatsession",
                    ),
                ),
                (
                    "uploaded_document",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated uploaded document for document messages",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message",
                        to="ai_assistant.uploadeddocument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Message",
                "verbose_name_plural": "Chat Messages",
                "db_table": "ai_assistant_chat_messages",
                "ordering": ["created_on"],
            },
        ),
        migrations.AddIndex(
            model_name="uploadeddocument",
            index=models.Index(
                fields=["document_type"], name="ai_assistan_documen_cc7d39_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="uploadeddocument",
            index=models.Index(
                fields=["processing_status"], name="ai_assistan_process_bfeaa3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="uploadeddocument",
            index=models.Index(
                fields=["owner", "-created_on"], name="ai_assistan_owner_i_7d3652_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="uploadeddocument",
            index=models.Index(
                fields=["confidence_score"], name="ai_assistan_confide_a49595_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="processingtask",
            index=models.Index(fields=["status"], name="ai_assistan_status_d59025_idx"),
        ),
        migrations.AddIndex(
            model_name="processingtask",
            index=models.Index(
                fields=["task_type"], name="ai_assistan_task_ty_599190_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="processingtask",
            index=models.Index(
                fields=["session", "-created_on"], name="ai_assistan_session_c2b067_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="processingtask",
            index=models.Index(
                fields=["owner", "-created_on"], name="ai_assistan_owner_i_db6652_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatsession",
            index=models.Index(
                fields=["owner", "-last_activity"],
                name="ai_assistan_owner_i_efdaef_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="chatsession",
            index=models.Index(
                fields=["session_status"], name="ai_assistan_session_6abeac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatsession",
            index=models.Index(
                fields=["-created_on"], name="ai_assistan_created_0d7992_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["session", "created_on"], name="ai_assistan_session_4dbddd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["message_type"], name="ai_assistan_message_61a9a6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["is_processed"], name="ai_assistan_is_proc_f3d4c4_idx"
            ),
        ),
    ]
