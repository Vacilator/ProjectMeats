# HTTP-only server configuration (fallback when SSL certificates are not available)
server {
    listen 80;
    server_name your_droplet_ip;

    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Frontend proxy (React app) - use resolver for dynamic upstream
    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream_frontend frontend:3000;
        proxy_pass http://$upstream_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend API proxy (Django app) - use resolver for dynamic upstream
    location ~ ^/(api|admin|django_static) {
        resolver 127.0.0.11 valid=30s;
        set $upstream_backend backend:8000;
        proxy_pass http://$upstream_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle long uploads for file attachments
        client_max_body_size 100M;
        proxy_read_timeout 300;
    }
}