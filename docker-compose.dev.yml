services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-projectmeats_db}
      POSTGRES_USER: ${POSTGRES_USER:-projectmeats_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-WATERMELON1219}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-projectmeats_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000  # Use runserver for development
    volumes:
      - ./backend:/app  # Mount for hot reload
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-projectmeats_user}:${POSTGRES_PASSWORD:-WATERMELON1219}@db:5432/${POSTGRES_DB:-projectmeats_db}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your_secure_secret_key}
      - DEBUG=True
      - ALLOWED_HOSTS=*

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app  # Mount for hot reload
      - /app/node_modules  # Exclude node_modules from mount
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker
    stdin_open: true
    tty: true

volumes:
  postgres_data: