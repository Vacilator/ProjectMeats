version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-projectmeats_db}
      POSTGRES_USER: ${POSTGRES_USER:-projectmeats_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-WATERMELON1219}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-projectmeats_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    command: gunicorn --bind 0.0.0.0:8000 projectmeats.wsgi:application --workers=3
    volumes:
      - ./backend:/app/backend  # For development - remove for production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-projectmeats_user}:${POSTGRES_PASSWORD:-WATERMELON1219}@db:5432/${POSTGRES_DB:-projectmeats_db}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your_secure_secret_key}
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    ports:
      - "3000:80"  # Map to port 3000 externally for dev familiarity
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend  # For development - remove for production

volumes:
  postgres_data: