# Pre-commit configuration for ProjectMeats
# This file configures automated code quality checks that run before each commit
# See https://pre-commit.com for more information

repos:
  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: debug-statements
      - id: detect-private-key

  # Python backend formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        files: ^backend/
        args: [--line-length=88, --exclude=migrations]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        files: ^backend/
        args: [--profile=black, --skip=migrations]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        files: ^backend/
        args: [--max-line-length=88, --extend-ignore=E203,W503, --exclude=migrations]

  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^backend/
        args: [-c, .bandit]
        exclude: backend/*/migrations/.*

  # Frontend TypeScript/JavaScript formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: ^frontend/
        types_or: [javascript, jsx, ts, tsx, json, css, scss, markdown]
        args: [--config, frontend/.prettierrc, --ignore-path, frontend/.prettierignore]

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.52.0
    hooks:
      - id: eslint
        files: ^frontend/src/.*\.(ts|tsx|js|jsx)$
        args: [--fix, --ext, .ts,.tsx,.js,.jsx]
        additional_dependencies:
          - '@typescript-eslint/eslint-plugin@^6.0.0'
          - '@typescript-eslint/parser@^6.0.0'
          - 'eslint@^8.0.0'
          - 'eslint-plugin-react@^7.33.0'
          - 'eslint-plugin-react-hooks@^4.6.0'

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.md$|
            package-lock\.json$
          )$

  # SQL formatting (for migration files)
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 2.3.5
    hooks:
      - id: sqlfluff-lint
        files: \.sql$
        args: [--dialect, postgres]

  # Documentation checks
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        args: [--wrap, "80"]
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black

# Configuration for specific tools
default_language_version:
  python: python3.9
  node: 18.17.0

# Files to exclude from all hooks
exclude: |
  (?x)^(
    .*migrations/.*\.py$|
    .*node_modules/.*|
    .*\.min\.(js|css)$|
    .*build/.*|
    .*dist/.*|
    .*coverage/.*|
    .*\.lock$|
    .*venv/.*|
    .*env/.*
  )$

# Fail fast - stop running hooks after first failure
fail_fast: false

# Default stages to run
default_stages: [commit, push]